/*
 * adt-typecheck-signature.js - Typechecking for JavaScript through adt.js evaluators
 * adt-typecheck-signature.js is free, public domain software (http://creativecommons.org/publicdomain/zero/1.0/)
 * Originally created by Rehno Lindeque of http://www.mischievousmeerkat.com
 * Use it in combination with https://github.com/rehno-lindeque/adt.js and
 * https://github.com/rehno-lindeque/adt-typecheck.js
 */
var adt = adt || (typeof require === 'function'? require('adt.js') : {});
adt.typecheck = adt.typecheck || (typeof require === 'function'? require('adt-typecheck.js') : {});
(function() {
"use strict";
var isFunctionADT=adt({Function:function(){return this._datatype==="ADT"},_:!1});adt.typecheck.signature={"function":function(a,b,c){if(typeof b!="function")throw"No type signature supplied to `adt.typecheck.signature.function`.";if(!c)throw"No function supplied to `adt.typecheck.signature.function`.";var d=adt.typecheck(function(){return this.Arguments(b.call(this))});return function(){var a=d(arguments);if(a.length>0)throw adt.typecheck.show(a).join("\n");c.apply(this,arguments)}},chainFunction:function(a,b,c){if(a&&Object.prototype.toString(a)!=="[object Arguments]")throw"Expected arguments to be passed to `adt.typecheck.signature.chainFunction`.";if(typeof b!="function")throw"No type signature supplied to `adt.typecheck.signature.chainFunction`.";if(typeof c!="function")throw"No node function supplied to `adt.typecheck.signature.chainFunction`.";var d,e=adt.typecheck(function(){var a=b.call(this);if(a.length<1)throw"Too few arguments in chain function, a callback function is required.";if(!isFunctionADT(a[a.length-1]))throw"The last argument in the chain function signature should be a Function.";return d=a.length,this.Arguments(a)});return function(){var a=e(arguments),b,g;if(a.length>0){b=adt.typecheck.show(a);if(arguments.length!==d)throw"Expected "+d+" arguments, but received "+arguments.length+".\n"+b;if(typeof arguments[arguments.length-1]!="function")throw b}g=arguments[arguments.length-1],a.length>0?g(b):c.apply(this,[].slice.call(arguments).concat([g]))}}};  // Export typecheck signature to a CommonJS module if exports is available
  if (typeof module !== "undefined" && module !== null)
    module.exports = adt.typecheck.signature;
})();
